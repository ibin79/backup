#################################################
# rsnapshot.conf - rsnapshot configuration file #
#################################################
#                                               #
# PLEASE BE AWARE OF THE FOLLOWING RULES:       #
#                                               #
# This file requires tabs between elements      #
#                                               #
# Directories require a trailing slash:         #
#   right: /home/                               #
#   wrong: /home                                #
#                                               #
# http://www.php79.com/ 권장 설정 적용           #
#                                               #
#################################################

#######################
# CONFIG FILE VERSION #
#######################

config_version	1.2

###########################
# SNAPSHOT ROOT DIRECTORY #
###########################

# All snapshots will be stored under this root directory.
#
# php79: 백업 보관 디렉토리
snapshot_root	/backup/.snapshots/

# If no_create_root is enabled, rsnapshot will not automatically create the
# snapshot_root directory. This is particularly useful if you are backing
# up to removable media, such as a FireWire or USB drive.
#
# php79: 백업 보관 디렉토리가 존재하지 않더라도, 강제로 만들지 않습니다.
#  이 값을 0 으로 변경하면  NAS, USB 등의 외부 저장 장치에 백업하도록 해두었을 경우,
#  외부 저장 장치가 마운트되지 않은 상황에서 백업이 실행되면, 운영 디스크에 백업 보관 디렉토리르 자동 생성하게 됩니다.
#  이로 인해 운영 디스크의 용량 초과로 인한 서비스 장애가 발생하는 사례가 생길 수 있습니다.
no_create_root	1

#################################
# EXTERNAL PROGRAM DEPENDENCIES #
#################################

# LINUX USERS:   Be sure to uncomment "cmd_cp". This gives you extra features.
# EVERYONE ELSE: Leave "cmd_cp" commented out for compatibility.
#
# See the README file or the man page for more details.
#
cmd_cp		/bin/cp

# uncomment this to use the rm program instead of the built-in perl routine.
#
cmd_rm		/bin/rm

# rsync must be enabled for anything to work. This is the only command that
# must be enabled.
#
cmd_rsync	/usr/bin/rsync

# Uncomment this to enable remote ssh backups over rsync.
#
#cmd_ssh	/usr/bin/ssh

# Comment this out to disable syslog support.
#
cmd_logger	/usr/bin/logger

# Uncomment this to specify the path to "du" for disk usage checks.
# If you have an older version of "du", you may also want to check the
# "du_args" parameter below.
#
cmd_du		/usr/bin/du

# Uncomment this to specify the path to rsnapshot-diff.
#
#cmd_rsnapshot_diff	/usr/local/bin/rsnapshot-diff

# Specify the path to a script (and any optional arguments) to run right
# before rsnapshot syncs files
#
#cmd_preexec	/path/to/preexec/script

# Specify the path to a script (and any optional arguments) to run right
# after rsnapshot syncs files
#
#cmd_postexec	/path/to/postexec/script

#########################################
#           BACKUP INTERVALS            #
# Must be unique and in ascending order #
# i.e. hourly, daily, weekly, etc.      #
#########################################

# php79: 백업 보관 기간은 매일 7일간, 매주 4주간, 매달 3개월간 보관합니다.
#interval	hourly	6
interval	daily	7
interval	weekly	4
interval	monthly	3

############################################
#              GLOBAL OPTIONS              #
# All are optional, with sensible defaults #
############################################

# Verbose level, 1 through 5.
# 1     Quiet           Print fatal errors only
# 2     Default         Print errors and warnings only
# 3     Verbose         Show equivalent shell commands being executed
# 4     Extra Verbose   Show extra verbose information
# 5     Debug mode      Everything
#
verbose		2

# Same as "verbose" above, but controls the amount of data sent to the
# logfile, if one is being used. The default is 3.
#
loglevel	3

# If you enable this, data will be written to the file you specify. The
# amount of data written is controlled by the "loglevel" parameter.
#
logfile	/var/log/rsnapshot

# If enabled, rsnapshot will write a lockfile to prevent two instances
# from running simultaneously (and messing up the snapshot_root).
# If you enable this, make sure the lockfile directory is not world
# writable. Otherwise anyone can prevent the program from running.
#
lockfile	/var/run/rsnapshot.pid

# Default rsync args. All rsync commands have at least these options set.
#
#rsync_short_args	-a
#rsync_long_args	--delete --numeric-ids --relative --delete-excluded

# ssh has no args passed by default, but you can specify some here.
#
#ssh_args	-p 22

# Default arguments for the "du" program (for disk space reporting).
# The GNU version of "du" is preferred. See the man page for more details.
# If your version of "du" doesn't support the -h flag, try -k flag instead.
#
#du_args	-csh

# If this is enabled, rsync won't span filesystem partitions within a
# backup point. This essentially passes the -x option to rsync.
# The default is 0 (off).
#
#one_fs		0

# The include and exclude parameters, if enabled, simply get passed directly
# to rsync. If you have multiple include/exclude patterns, put each one on a
# separate line. Please look up the --include and --exclude options in the
# rsync man page for more details on how to specify file name patterns. 
# 
#include	???
#include	???
#exclude	???
#exclude	???

# The include_file and exclude_file parameters, if enabled, simply get
# passed directly to rsync. Please look up the --include-from and
# --exclude-from options in the rsync man page for more details.
#
#include_file	/path/to/include/file
#exclude_file	/path/to/exclude/file

# If your version of rsync supports --link-dest, consider enable this.
# This is the best way to support special files (FIFOs, etc) cross-platform.
# The default is 0 (off).
#
#link_dest	0

# When sync_first is enabled, it changes the default behaviour of rsnapshot.
# Normally, when rsnapshot is called with its lowest interval
# (i.e.: "rsnapshot hourly"), it will sync files AND rotate the lowest
# intervals. With sync_first enabled, "rsnapshot sync" handles the file sync,
# and all interval calls simply rotate files. See the man page for more
# details. The default is 0 (off).
#
#sync_first	0

# If enabled, rsnapshot will move the oldest directory for each interval
# to [interval_name].delete, then it will remove the lockfile and delete
# that directory just before it exits. The default is 0 (off).
#
#use_lazy_deletes	0

# Number of rsync re-tries. If you experience any network problems or
# network card issues that tend to cause ssh to crap-out with
# "Corrupted MAC on input" errors, for example, set this to a non-zero
# value to have the rsync operation re-tried
#
#rsync_numtries 0

###############################
### BACKUP POINTS / SCRIPTS ###
###############################

### LOCALHOST
# php79: 로컬에서 백업할 디렉토리를 설정합니다.
#  - 주의) 2개 이상의 인자값은 탭(tab)키로 구분해야 하며, 공백(space)키로 구분하면 에러가 발생합니다.
backup	/home/	localhost/
backup	/etc/	localhost/
#backup	/usr/local/	localhost/
#backup	/opt/	localhost/
backup	/var/spool/cron/	localhost/
backup	/root/	localhost/
#backup	/var/named/	localhost/
backup	/var/lib/mysql/	localhost/

# php79: MySQL 백업 스크립트
backup_script	/backup/.snapshots/php79-mysql-backup.sh	localhost/mysqldump/

# php79: /home 디렉토리에서 제외할 디렉토리/파일 목록을 만들 경우, 아래처럼 4번째 인자값을 추가해주시면 됩니다.
#backup	/home/	localhost/	exclude_file=/backup/home.exclude


### REMOTE
# server1 - ip: 192.168.0.101, ssh port: 22
#backup_script	/usr/bin/ssh root@192.168.0.101 "/home/.mysql-backup/php79-remote-mysql-backup.sh"	server1/.remote-mysql-backup
#backup	root@192.168.0.101:/home/	server1/	+rsync_long_args=--bwlimit=4096
#backup	root@192.168.0.101:/etc/	server1/	+rsync_long_args=--bwlimit=4096
#backup	root@192.168.0.101:/usr/local/	server1/	+rsync_long_args=--bwlimit=4096
#backup	root@192.168.0.101:/opt/	server1/	+rsync_long_args=--bwlimit=4096
#backup	root@192.168.0.101:/var/spool/cron/	server1/	+rsync_long_args=--bwlimit=4096
#backup	root@192.168.0.101:/root/	server1/	+rsync_long_args=--bwlimit=4096
#backup	root@192.168.0.101:/var/named/	server1/	+rsync_long_args=--bwlimit=4096
#backup	root@192.168.0.101:/var/lib/mysql/	server1/	+rsync_long_args=--bwlimit=4096

# server2 - ip: 192.168.0.102, ssh port: 2222
#backup_script	/usr/bin/ssh root@192.168.0.102 "/home/.mysql-backup/php79-remote-mysql-backup.sh"	server2/.remote-mysql-backup
#backup	root@192.168.0.102:/home/	server2/	+rsync_long_args=--bwlimit=4096,+ssh_args=-p 2222
#backup	root@192.168.0.102:/etc/	server2/	+rsync_long_args=--bwlimit=4096,+ssh_args=-p 2222
#backup	root@192.168.0.102:/usr/local/	server2/	+rsync_long_args=--bwlimit=4096,+ssh_args=-p 2222
#backup	root@192.168.0.102:/opt/	server2/	+rsync_long_args=--bwlimit=4096,+ssh_args=-p 2222
#backup	root@192.168.0.102:/var/spool/cron/	server2/	+rsync_long_args=--bwlimit=4096,+ssh_args=-p 2222
#backup	root@192.168.0.102:/root/	server2/	+rsync_long_args=--bwlimit=4096,+ssh_args=-p 2222
#backup	root@192.168.0.102:/var/named/	server2/	+rsync_long_args=--bwlimit=4096,+ssh_args=-p 2222
#backup	root@192.168.0.102:/var/lib/mysql/	server2/	+rsync_long_args=--bwlimit=4096,+ssh_args=-p 2222


# EXAMPLE.COM
#backup_script	/bin/date "+ backup of example.com started at %c"	unused1
#backup	root@example.com:/home/	example.com/	+rsync_long_args=--bwlimit=16,exclude=core
#backup	root@example.com:/etc/	example.com/	exclude=mtab,exclude=core
#backup_script	ssh root@example.com "mysqldump -A > /var/db/dump/mysql.sql"	unused2
#backup	root@example.com:/var/db/dump/	example.com/
#backup_script	/bin/date	"+ backup of example.com ended at %c"	unused9

# CVS.SOURCEFORGE.NET
#backup_script	/usr/local/bin/backup_rsnapshot_cvsroot.sh	rsnapshot.cvs.sourceforge.net/

# RSYNC.SAMBA.ORG
#backup	rsync://rsync.samba.org/rsyncftp/	rsync.samba.org/rsyncftp/

